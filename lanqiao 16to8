import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);
		int num = in.nextInt();
		String str[] = new String[num+1];
		for(int i=0;i<num;i++) {
			str[i] = in.next();
			
		}
		in.close();
		for(int j=0;j<num;j++) {     //原先写的是j<str.length，逻辑不对，导致出现空指针异常，循环进行了两遍，第二遍没有数，只有一个数
			String strBinary = toBinary(str[j]);
			int lenBinary = strBinary.length();
			if(lenBinary%3==1) strBinary = "00"+strBinary;
			if(lenBinary%3==2) strBinary = '0'+strBinary;
			String strOctal = toOctal(strBinary);
			System.out.println(strOctal);
			
		}
		
	}
	
	
	public static String toBinary(String strb) {
		
		int len_strb = strb.length();
		StringBuffer str = new StringBuffer();
		for(int i=0;i<len_strb;i++) {
			switch(strb.charAt(i)) {
			case '0':str.append("0000");break;//出现字符数组越界异常，判断是由于没有字符串出现，30行报错
			case '1':str.append("0001");break;//后来打印输出发现字符串非常长，原因在于switch-case 语句没有break，导致进行到
			case '2':str.append("0010");break;//case 5 之后，继续进行678，字符串很长，造成错误
			case '3':str.append("0011");break;
			case '4':str.append("0100");break;
			case '5':str.append("0101");break;
			case '6':str.append("0110");break;
			case '7':str.append("0111");break;
			case '8':str.append("1000");break;
			case '9':str.append("1001");break;
			case 'A':str.append("1010");break;
			case 'B':str.append("1011");break;
			case 'C':str.append("1100");break;
			case 'D':str.append("1101");break;
			case 'E':str.append("1110");break;
			case 'F':str.append("1111");break;
			default: break;
			}
		}
		
		return str.toString();
	}
	
	
	public static String toOctal(String stro) {
		
		int len_stro = stro.length();
		StringBuffer str = new StringBuffer();
		int k;
		if(stro.substring(0, 3).equals("000")) k=3;
		else k=0;//这句可不写
		for(int i=k;i<len_stro-2;i+=3) {//原先写的是k<len_stro-2
			
			if(stro.substring(i,i+3).equals("000")) str.append('0');
			else if(stro.substring(i,i+3).equals("001")) str.append('1');
			else if(stro.substring(i,i+3).equals("010")) str.append('2');
			else if(stro.substring(i,i+3).equals("011")) str.append('3');
			else if(stro.substring(i,i+3).equals("100")) str.append('4');
			else if(stro.substring(i,i+3).equals("101")) str.append('5');
			else if(stro.substring(i,i+3).equals("110")) str.append('6');
			else if(stro.substring(i,i+3).equals("111")) str.append('7');
		}
		
		return str.toString();
	}


}
